library(knitr)
# Calculate average Income, Age, and Education
average_stats <- data %>%
summarize(
Average_Income = mean(Income, na.rm = TRUE),
Average_Age = mean(Age, na.rm = TRUE),
Average_Education = mean(Education, na.rm = TRUE)
)
# Print the results as a table
kable(average_stats, caption = "Average Income, Age, and Education of Treadmill Buyers")
# Load necessary libraries
library(dplyr)
library(ggplot2)
# Calculate average Income, Age, and Education
average_stats <- data %>%
summarize(
Average_Income = mean(Income, na.rm = TRUE),
Average_Age = mean(Age, na.rm = TRUE),
Average_Education = mean(Education, na.rm = TRUE)
)
# Reshape data for plotting
average_stats_long <- average_stats %>%
pivot_longer(cols = everything(), names_to = "Category", values_to = "Average")
average_stats = data %>% summarize(avg_income = mean(Income), avg_age = mean(Age), avg_edu = mean(Education))
kable(average_stats, caption = "Average of Treadmill Buyers")
averages = data %>% summarize(Avg_income = mean(Income), Avg_age = mean(Age), Avg_edu = mean(Education))
kable(averages, caption = "Average of Treadmill Buyers")
averages = data %>% summarize(Avg_income = mean(Income), Avg_age = mean(Age), Avg_edu = mean(Education))
kable(averages, caption = "Average of Treadmill Buyers")
averages = data %>% summarize(Avg_Income = mean(Income), Avg_Age = mean(Age), Avg_Education = mean(Education))
kable(averages, caption = "Averages of Treadmill Buyers")
averages = data %>% summarize(Avg_Income = mean(Income), Avg_Age = mean(Age), Avg_Education = mean(Education))
kable(averages, caption = "Averages of Treadmill Buyers")
# Load necessary libraries
library(dplyr)
library(ggplot2)
# Calculate average Usage (days per week) and Miles
average_usage_miles <- data %>%
summarize(
Average_Usage = mean(Usage, na.rm = TRUE),
Average_Miles = mean(Miles, na.rm = TRUE)
)
# Reshape data for plotting
average_usage_miles_long <- average_usage_miles %>%
pivot_longer(cols = everything(), names_to = "Category", values_to = "Average")
# Load necessary libraries
library(dplyr)
library(knitr)
# Calculate average Usage (days per week) and Miles
average_usage_miles <- data %>%
summarize(
Average_Usage = mean(Usage, na.rm = TRUE),
Average_Miles = mean(Miles, na.rm = TRUE)
)
# Print the results as a table
kable(average_usage_miles, caption = "Average Days and Miles Expected to Run on Treadmill")
average_usage_miles <- data %>%
summarize(
Average_Usage = mean(Usage, na.rm = TRUE),
Average_Miles = mean(Miles, na.rm = TRUE)
)
kable(average_usage_miles, caption = "Average Days and Miles Expected on Treadmill")
avg_usage_miles = data %>%
summarize(
Average_Usage = mean(Usage),
Average_Miles = mean(Miles)
)
kable(avg_usage_miles, caption = "Average Days and Miles Expected on Treadmill")
avg_usage_miles = data %>%
summarize(
Average_Usage = mean(Usage),
Average_Miles = mean(Miles)
)
kable(avg_usage_miles, caption = "Average Days and Miles Expected on Treadmill")
# Load necessary libraries
library(dplyr)
library(knitr)
# Calculate maximum Usage
max_usage <- data %>%
summarize(Max_Usage = max(Usage, na.rm = TRUE))
# Print the result as a table
kable(max_usage, caption = "Maximum Treadmill Usage per Week")
avg_usage_miles = data %>% summarize(Average_Usage = mean(Usage), Average_Miles = mean(Miles))
kable(avg_usage_miles, caption = "Average Days and Miles Expected on Treadmill")
self_rate = data %>% summarise(Avg_Rating = mean(Fitness))
kable(self_rate, caption = "Average self-rated fitness of customers buying treadmill")
self_rate = data %>% summarise(Avg_Rating = mean(Fitness))
kable (self_rate, caption = "Average self-rated fitness of customers buying treadmill")
self_rate = data %>% summarise(Avg_Rating = mean(Fitness))
kable (self_rate, caption = "Average self-rated fitness of customers buying treadmill")
ggplot(data$MaritalStatus) +
geom_bar(fill = "Teal") +
labs(title = "Treadmill Purchases by Marital Status", x = "Maritial Status", y = "Number of Customers")
ggplot(data, aes = MaritalStatus) +
geom_bar(fill = "Teal") +
labs(title = "Treadmill Purchases by Marital Status", x = "Maritial Status", y = "Number of Customers")
ggplot(data, aes = (x = MaritalStatus)) +
geom_bar(fill = "Teal") +
labs(title = "Treadmill Purchases by Marital Status", x = "Maritial Status", y = "Number of Customers")
ggplot(data, aes(x = MaritalStatus)) +
geom_bar(fill = "Teal") +
labs(title = "Treadmill Purchases by Marital Status", x = "Maritial Status", y = "Number of Customers")
ggplot(data, aes(x = MaritalStatus)) +
geom_bar(fill = "Green") +
labs(title = "Treadmill Purchases by Marital Status", x = "Maritial Status", y = "Number of Customers")
ggplot(data, aes(x = MaritalStatus)) +
geom_bar(fill = "Green", width = 0.4) +
labs(title = "Treadmill Purchases by Marital Status", x = "Maritial Status", y = "Number of Customers")
ggplot(data, aes(x = MaritalStatus)) +
geom_bar(fill = "LightGreen", width = 0.4) +
labs(title = "Treadmill Purchases by Marital Status", x = "Maritial Status", y = "Number of Customers")
ggplot(data, aes(x = MaritalStatus)) +
geom_bar(fill = "LightGreen", width = 0.3) +
labs(title = "Treadmill Purchases by Marital Status", x = "Maritial Status", y = "Number of Customers")
ggplot(data, aes(x = Product, y = Income)) +
geom_boxplot() +
labs(title = "Income Distribution by Treadmill Model", x = "Treadmill Model", y = "Income")
# Perform ANOVA
anova_result <- aov(Income ~ Product, data = data)
summary(anova_result)
# First, categorize Income into bins (low, medium, high)
df$Income_category <- cut(df$Income, breaks = c(0, 50000, 100000, Inf), labels = c("Low", "Medium", "High"))
# First, categorize Income into bins (low, medium, high)
data$Income_category <- cut(df$Income, breaks = c(0, 50000, 100000, Inf), labels = c("Low", "Medium", "High"))
# First, categorize Income into bins (low, medium, high)
data$Income_category <- cut(df$Income, breaks = c(0, 50000, 100000, Inf), labels = c("Low", "Medium", "High"))
# First, categorize Income into bins (low, medium, high)
data$Income_category <- cut(data$Income, breaks = c(0, 50000, 100000, Inf), labels = c("Low", "Medium", "High"))
# Perform Chi-Square test
chi_square_result <- chisq.test(table(data$Product, data$Income_category))
print(chi_square_result)
anova_result = aov(Income ~ Product, data = data)
summary(anova_result)
library(ggplot2)
library(dplyr)
data = read.csv("CardioGoodFitness.csv")
glimpse(data)
colnames(data)
missing_data = colSums(is.na(data))
print(missing_data)
summary(data)
models = unique(data$Product)
print(models)
length(models)
library(knitr)
most_sold = data %>% count(Product)
kable(most_sold, col.names = c("Product", "Sold"), caption = "Treadmill Model Sales")
ggplot(data, aes(x = Gender)) +
geom_bar(fill = "Purple") +
labs(title = "Treadmill Purchases by Gender", x = "Gender", y = "Number of Customers")
averages = data %>% summarize(Avg_Income = mean(Income), Avg_Age = mean(Age), Avg_Education = mean(Education))
kable(averages, caption = "Averages of Treadmill Buyers")
avg_usage_miles = data %>% summarize(Avg_Usage = mean(Usage), Avg_Miles = mean(Miles))
kable(avg_usage_miles, caption = "Average Days and Miles Expected on Treadmill")
self_rate = data %>% summarise(Avg_Rating = mean(Fitness))
kable (self_rate, caption = "Average self-rated fitness of customers buying treadmill")
ggplot(data, aes(x = MaritalStatus)) +
geom_bar(fill = "LightGreen", width = 0.3) +
labs(title = "Treadmill Purchases by Marital Status", x = "Maritial Status", y = "Number of Customers")
anova_result = aov(Income ~ Product, data = data)
summary(anova_result)
ggplot(data, aes(x = Product, y = Income)) +
geom_boxplot() +
labs(title = "Income Distribution by Treadmill Model", x = "Treadmill Model", y = "Income")
library(knitr)
anova_result = aov(Income ~ Product, data = data)
anova_summary = summary(anova_result)
anova_df = as.data.frame(anova_summary[[1]])
kable(anova_df, format = "markdown", caption = "ANOVA Table: Income ~ Product")
library(knitr)
anova_result = aov(Income ~ Product, data = data)
anova_summary = summary(anova_result)
anova_df = as.data.frame(anova_summary[[1]])
kable(anova_df, format = "markdown", caption = "ANOVA Table: Income ~ Product")
ggplot(data, aes(x = Product, y = Income)) +
geom_boxplot() +
labs(title = "Income Distribution by Treadmill Model", x = "Treadmill Model", y = "Income")
anova_age_model <- aov(Age ~ Product, data = data)
summary(anova_age_model)
anova_age_model <- aov(Age ~ Product, data = data)
anova_result <- summary(anova_age_model)
kable(anova_result[[1]], caption = "ANOVA Table: Age vs Product")
anova_age_model <- aov(Age ~ Product, data = data)
anova_result <- summary(anova_age_model)
kable(anova_result[[1]], caption = "ANOVA Table: Age vs Product")
ggplot(data, aes(x = Product, y = Age)) +
geom_boxplot() +
labs(title = "Age Distribution by Treadmill Model", x = "Treadmill Model", y = "Age")
ggplot(data, aes(x = Product, y = Age)) +
geom_boxplot() +
labs(title = "Age Distribution by Treadmill Model", x = "Treadmill Model", y = "Age")
# Perform Chi-square test for categorical fitness variable
table_fitness_model = table(data$Fitness, data$Product)
chisq_test = chisq.test(table_fitness_model)
chisq_test
# Perform Chi-square test for categorical fitness variable
table_fitness_model = table(data$Fitness, data$Product)
chisq_test = chisq.test(table_fitness_model)
chisq_test
table_fitness_model = table(data$Fitness, data$Product)
chisq_test = chisq.test(table_fitness_model)
chi_result = chisq_test
kable(chi_result[[1]], caption = "Chi-Square Test: ")
table_fitness_model = table(data$Fitness, data$Product)
chisq_test = chisq.test(table_fitness_model)
chi_result = chisq_test
kable(chi_result, caption = "Chi-Square Test: ")
# Create contingency table
table_fitness_model = table(data$Fitness, data$Product)
# Perform Chi-Square test
chisq_test = chisq.test(table_fitness_model)
# Create a data frame for the Chi-Square test result
chi_result_df <- data.frame(
Statistic = chisq_test$statistic,
DF = chisq_test$parameter,
P_value = chisq_test$p.value
)
# Use knitr to create a formatted table
library(knitr)
library(kableExtra)
kable(chi_result_df, caption = "Chi-Square Test Results: Fitness vs Product") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
table_fitness_model = table(data$Fitness, data$Product)
chisq_test = chisq.test(table_fitness_model)
chi_result_df <- data.frame(Statistic = chisq_test$statistic, DF = chisq_test$parameter, P_value = chisq_test$p.value)
kable(chi_result_df, caption = "Chi-Square Test Results: Fitness vs Product")
table_fitness_model = table(data$Fitness, data$Product)
chisq_test = chisq.test(table_fitness_model)
chi_result_df <- data.frame(Statistic = chisq_test$statistic, DF = chisq_test$parameter, P_value = chisq_test$p.value)
kable(chi_result_df, caption = "Chi-Square Test Results: Fitness vs Product")
ggplot(data, aes(x = Product, fill = factor(Fitness))) +
geom_bar(position = "dodge") +
labs(title = "Distribution of Fitness by Product",
x = "Treadmill Model",
y = "Count",
fill = "Fitness Level")
anova_age_model <- aov(Age ~ Product, data = data)
anova_result <- summary(anova_age_model)
kable(anova_result[[1]], caption = "ANOVA Table: Age vs Product")
anova_edu_model = aov(Education ~ Product, data = data)
anova_result = summary(anova_edu_model)
kable(anova_result[[1]], caption = "ANOVA Table: Education vs Product")
ggplot(data, aes(x = Product, fill = factor(Fitness))) +
geom_bar(position = "dodge") +
labs(title = "Distribution of Fitness by Product", x = "Treadmill Model",y = "Count", fill = "Fitness Level")
```{r, echo=FALSE}
anova_edu_model = aov(Education ~ Product, data = data)
anova_result = summary(anova_edu_model)
kable(anova_result[[1]], caption = "ANOVA Table: Education vs Product")
anova_edu_model = aov(Education ~ Product, data = data)
summary(anova_edu_model)
ggplot(data, aes(x = Product, y = Education)) +
geom_boxplot() +
labs(title = "Education Distribution by Treadmill Model", x = "Treadmill Model", y = "Education")
ggplot(data, aes(x = Product, y = Education)) +
geom_boxplot() +
labs(title = "Education Distribution by Treadmill Model", x = "Treadmill Model", y = "Education")
table_gender_model = table(data$Gender, data$Product)
chi_square_gender_model = chisq.test(table_gender_model)
kable(chi_square_gender_model[[1]], caption = "Chi-Square Test: Gender vs Treadmill Model")
table_gender_model = table(data$Gender, data$Product)
chi_square_gender_model = chisq.test(table_gender_model)
kable(chi_square_gender_model[[1]], caption = "Chi-Square Test: Gender vs Treadmill Model")
table_gender_model = table(data$Gender, data$Product)
chi_square_gender_model = chisq.test(table_gender_model)
chi_square_gender_df = data.frame(Statistic = chi_square_gender_model$statistic, DF = chi_square_gender_model$parameter, P_value = chi_square_gender_model$p.value)
kable(chi_square_gender_df, caption = "Chi-Square Test: Gender vs Treadmill Model")
table_gender_model = table(data$Gender, data$Product)
chi_square_gender_model = chisq.test(table_gender_model)
chi_square_gender_df = data.frame(Statistic = chi_square_gender_model$statistic, DF = chi_square_gender_model$parameter, P_value = chi_square_gender_model$p.value)
kable(chi_square_gender_df, caption = "Chi-Square Test: Gender vs Treadmill Model")
table_gender_model = table(data$Gender, data$Product)
chi_square_gender_model = chisq.test(table_gender_model)
chi_square_gender_df = data.frame(Statistic = chi_square_gender_model$statistic, DF = chi_square_gender_model$parameter, P_value = chi_square_gender_model$p.value)
kable(chi_square_gender_df, caption = "Chi-Square Test: Gender vs Treadmill Model")
ggplot(data, aes(x = Product, fill = Gender)) +
geom_bar(position = "fill") +
labs(title = "Distribution of Gender by Treadmill Model", y = "Proportion", x = "Treadmill Model")
library(ggplot2)
library(dplyr)
data = read.csv("CardioGoodFitness.csv")
glimpse(data)
colnames(data)
missing_data = colSums(is.na(data))
print(missing_data)
summary(data)
models = unique(data$Product)
print(models)
length(models)
library(knitr)
most_sold = data %>% count(Product)
kable(most_sold, col.names = c("Product", "Sold"), caption = "Treadmill Model Sales")
ggplot(data, aes(x = Gender)) +
geom_bar(fill = "Purple") +
labs(title = "Treadmill Purchases by Gender", x = "Gender", y = "Number of Customers")
averages = data %>% summarize(Avg_Income = mean(Income), Avg_Age = mean(Age), Avg_Education = mean(Education))
kable(averages, caption = "Averages of Treadmill Buyers")
avg_usage_miles = data %>% summarize(Avg_Usage = mean(Usage), Avg_Miles = mean(Miles))
kable(avg_usage_miles, caption = "Average Days and Miles Expected on Treadmill")
self_rate = data %>% summarise(Avg_Rating = mean(Fitness))
kable (self_rate, caption = "Average self-rated fitness of customers buying treadmill")
ggplot(data, aes(x = MaritalStatus)) +
geom_bar(fill = "LightGreen", width = 0.3) +
labs(title = "Treadmill Purchases by Marital Status", x = "Maritial Status", y = "Number of Customers")
anova_result = aov(Income ~ Product, data = data)
anova_summary = summary(anova_result)
anova_df = as.data.frame(anova_summary[[1]])
kable(anova_df, format = "markdown", caption = "ANOVA Table: Income ~ Product")
ggplot(data, aes(x = Product, y = Income)) +
geom_boxplot() +
labs(title = "Income Distribution by Treadmill Model", x = "Treadmill Model", y = "Income")
anova_age_model <- aov(Age ~ Product, data = data)
anova_result <- summary(anova_age_model)
kable(anova_result[[1]], caption = "ANOVA Table: Age vs Product")
ggplot(data, aes(x = Product, y = Age)) +
geom_boxplot() +
labs(title = "Age Distribution by Treadmill Model", x = "Treadmill Model", y = "Age")
table_fitness_model = table(data$Fitness, data$Product)
chisq_test = chisq.test(table_fitness_model)
chi_result_df = data.frame(Statistic = chisq_test$statistic, DF = chisq_test$parameter, P_value = chisq_test$p.value)
kable(chi_result_df, caption = "Chi-Square Test Results: Fitness vs Product")
ggplot(data, aes(x = Product, fill = factor(Fitness))) +
geom_bar(position = "dodge") +
labs(title = "Distribution of Fitness by Product", x = "Treadmill Model",y = "Count", fill = "Fitness Level")
anova_edu_model = aov(Education ~ Product, data = data)
summary(anova_edu_model)
ggplot(data, aes(x = Product, y = Education)) +
geom_boxplot() +
labs(title = "Education Distribution by Treadmill Model", x = "Treadmill Model", y = "Education")
table_gender_model = table(data$Gender, data$Product)
chi_square_gender_model = chisq.test(table_gender_model)
chi_square_gender_df = data.frame(Statistic = chi_square_gender_model$statistic, DF = chi_square_gender_model$parameter, P_value = chi_square_gender_model$p.value)
kable(chi_square_gender_df, caption = "Chi-Square Test: Gender vs Treadmill Model")
ggplot(data, aes(x = Product, fill = Gender)) +
geom_bar(position = "fill") +
labs(title = "Distribution of Gender by Treadmill Model", y = "Proportion", x = "Treadmill Model")
table_marital_model = table(data$MaritalStatus, data$Product)
chi_square_marital_model = chisq.test(table_marital_model)
chi_square_martial_df = data.frame(Statistic = chi_square_marital_model$statistic, DF = chi_square_marital_model$parameter, P_value = chi_square_marital_model$p.value)
kable(chi_square_martial_df, caption = "Chi-Square Test: Martial Status vs Treadmill Model")
table_marital_model = table(data$MaritalStatus, data$Product)
chi_square_marital_model = chisq.test(table_marital_model)
chi_square_martial_df = data.frame(Statistic = chi_square_marital_model$statistic, DF = chi_square_marital_model$parameter, P_value = chi_square_marital_model$p.value)
kable(chi_square_martial_df, caption = "Chi-Square Test: Martial Status vs Treadmill Model")
ggplot(data, aes(x = Product, fill = MaritalStatus)) +
geom_bar(position = "fill") +
labs(title = "Distribution of Marital Status by Treadmill Model",
x = "Treadmill Model",
y = "Proportion",
fill = "Marital Status") +
scale_y_continuous(labels = scales::percent)
ggplot(data, aes(x = Product, fill = MaritalStatus)) +
geom_bar(position = "fill") +
labs(title = "Distribution of Marital Status by Treadmill Model",
x = "Treadmill Model",
y = "Proportion",
fill = "Marital Status") +
scale_y_continuous(labels = scales::percent)
data$AgeGroup <- cut(data$Age, breaks = c(20, 30, 40, 50, 60),
labels = c("20-30", "30-40", "40-50", "50-60"), right = FALSE)
# Plot: Stacked Bar Plot of Age Groups by Treadmill Model
ggplot(data, aes(x = Product, fill = AgeGroup)) +
geom_bar(position = "fill") +
labs(title = "Age Group Distribution by Treadmill Model",
x = "Treadmill Model",
y = "Proportion",
fill = "Age Group") +
scale_y_continuous(labels = scales::percent)
min(data$Age, na.rm = TRUE)
max(data$Age, na.rm = TRUE)
data$AgeGroup <- cut(data$Age, breaks = c(18, 30, 40, 50 ),
labels = c("18-30", "30-40", "40-50"), right = FALSE)
ggplot(data, aes(x = Product, fill = AgeGroup)) +
geom_bar(position = "fill") +
labs(title = "Age Group Distribution by Treadmill Model",
x = "Treadmill Model",
y = "Proportion",
fill = "Age Group") +
scale_y_continuous(labels = scales::percent)
missing = is.na(data$Age)
missing = is.na(data$Age)
missing = is.na(data$Age)
missing
sum(is.na(data$Age))
sum(is.na(data$Age))
print(sum(is.na(data$Age)))
print(unique(data$Age))
# Load necessary libraries
library(ggplot2)
library(scales)
# Create AgeGroup variable with correct age breaks
data$AgeGroup <- cut(data$Age, breaks = c(18, 30, 40, 50),
labels = c("18-30", "30-40", "40-50"), right = FALSE)
# Plot Age Group Distribution by Treadmill Model
ggplot(data, aes(x = Product, fill = AgeGroup)) +
geom_bar(position = "fill") +
labs(title = "Age Group Distribution by Treadmill Model",
x = "Treadmill Model",
y = "Proportion",
fill = "Age Group") +
scale_y_continuous(labels = percent_format()) # Changed to percent_format() for correct percentages
# Load necessary libraries
library(ggplot2)
library(scales)
# Create AgeGroup variable with correct age breaks
data$AgeGroup <- cut(data$Age, breaks = c(18, 30, 40, 50, Inf),
labels = c("18-30", "30-40", "40-50", 50+), right = FALSE)
# Load necessary libraries
library(ggplot2)
library(scales)
# Create AgeGroup variable with correct age breaks
data$AgeGroup <- cut(data$Age, breaks = c(18, 30, 40, 50, Inf),
labels = c("18-30", "30-40", "40-50", "50+"), right = FALSE)
# Plot Age Group Distribution by Treadmill Model
ggplot(data, aes(x = Product, fill = AgeGroup)) +
geom_bar(position = "fill") +
labs(title = "Age Group Distribution by Treadmill Model",
x = "Treadmill Model",
y = "Proportion",
fill = "Age Group") +
scale_y_continuous(labels = percent_format()) # Changed to percent_format() for correct percentages
# Load necessary libraries
library(ggplot2)
library(scales)
# Create AgeGroup variable with correct age breaks
data$AgeGroup <- cut(data$Age, breaks = c(18, 30, 40, 50, 60),
labels = c("18-30", "30-40", "40-50", "50-60"), right = FALSE)
# Plot Age Group Distribution by Treadmill Model
ggplot(data, aes(x = Product, fill = AgeGroup)) +
geom_bar(position = "fill") +
labs(title = "Age Group Distribution by Treadmill Model",
x = "Treadmill Model",
y = "Proportion",
fill = "Age Group") +
scale_y_continuous(labels = percent_format()) # Changed to percent_format() for correct percentages
ggplot(data, aes(x = Age, y = Income, color = Product)) +
geom_point() +
labs(title = "Income vs Age by Treadmill Model", x = "Age", y = "Income") +
theme_minimal()
ggplot(data, aes(x = Age, y = Income, color = Product)) +
geom_point() +
labs(title = "Income vs Age by Treadmill Model", x = "Age", y = "Income")
ggplot(data, aes(x = Age, y = Income, color = Product)) +
geom_point() +
labs(title = "Income vs Age by Treadmill Model", x = "Age", y = "Income")
library(scales)
data$AgeGroup <- cut(data$Age, breaks = c(18, 30, 40, 50, 60),
labels = c("18-30", "30-40", "40-50", "50-60"), right = FALSE)
ggplot(data, aes(x = Product, fill = AgeGroup)) +
geom_bar(position = "fill") +
labs(title = "Age Group Distribution by Treadmill Model", x = "Treadmill Model",
y = "Proportion",
fill = "Age Group") +
scale_y_continuous(labels = percent_format())
ggplot(data, aes(x = Product, fill = MaritalStatus)) +
geom_bar(position = "fill") +
labs(title = "Distribution of Marital Status by Treadmill Model",
x = "Treadmill Model",
y = "Proportion",
fill = "Marital Status") +
scale_y_continuous(labels = scales::percent)
ggplot(data, aes(x = Age, y = Income, color = Product)) +
geom_point() +
labs(title = "Income vs Age by Treadmill Model", x = "Age", y = "Income") +
scale_y_continuous(labels = label_comma())
ggplot(data, aes(x = Age, y = Income, color = Product)) +
geom_point() +
labs(title = "Income vs Age by Treadmill Model", x = "Age", y = "Income") +
scale_y_continuous(labels = label_comma())
table(data$Product)
# Bar chart for Product
ggplot(data, aes(x = Product)) +
geom_bar(fill = "lightblue", color = "black") +
labs(title = "Distribution of Treadmill Models Purchased",
x = "Treadmill Model",
y = "Number of Customers")
# Bar chart for Product with counts
ggplot(data, aes(x = Product)) +
geom_bar(fill = "lightblue", color = "black") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) +
labs(title = "Distribution of Treadmill Models Purchased",
x = "Treadmill Model",
y = "Number of Customers") +
theme_minimal()
# Bar chart for Product with counts
ggplot(data, aes(x = Product)) +
geom_bar(fill = "lightblue", color = "black") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) +
labs(title = "Distribution of Treadmill Models Purchased",
x = "Treadmill Model",
y = "Number of Customers") +
theme_minimal()
library(ggplot2)
library(dplyr)
library(knitr)
ggplot(data, aes(x = Product)) +
geom_bar(fill = "lightblue", color = "black") +
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5) +
labs(title = "Distribution of Treadmill Models Purchased",
x = "Treadmill Model",
y = "Number of Customers") +
theme_minimal()
library(ggplot2)
library(dplyr)
library(knitr)
data = read.csv("CardioGoodFitness.csv")
kable(head(data, 5), caption = "Top 5 Rows of CardioGoodFitness Data")
library(ggplot2)
library(dplyr)
library(knitr)
data = read.csv("CardioGoodFitness.csv")
kable(head(data, 5), caption = "Top 5 Rows of CardioGoodFitness Data")
